name: Build all images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  pre_build:
    name: build base_image ${{ matrix.arch.name }}
    strategy:
      fail-fast: true
      matrix:
        arch:
          - name: amd64
            runner: ubuntu-24.04
          - name: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.arch.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Purge containers
        run: 'docker kill $(docker ps -q) || exit 0'
      - name: Enable docker multiarch
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Run make build_base
        run: make build_base
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}
      - name: Export
        run: make export_base
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}
      - name: Log in to the Container registry
        if: ${{ github.event.pull_request.merged || github.actor == 'CamJN' }}
        uses: docker/login-action@v3
        id: login
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to github container registry
        if: ${{ success() && steps.login.conclusion != 'skipped' }}
        run: make push_base
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}


  build:
    needs: pre_build
    name: build ${{ matrix.img }} ${{ matrix.arch.name }}
    strategy:
      fail-fast: true
      matrix:
        img:
          - full
          - customizable
          - nodejs
          - ruby34 # EOL: 2028-03-31
          - ruby33 # EOL: 2027-03-31
          - python313 # EOL: 2029-10-07
          - python312 # EOL: 2028-10-02
        arch:
          - name: amd64
            runner: ubuntu-24.04
          - name: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.arch.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Purge containers
        run: 'docker kill $(docker ps -q) || exit 0'
      - name: Enable docker multiarch
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: "Run make build_${{ matrix.img }}"
        run: "make build_${{ matrix.img }}"
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}
      - name: Log in to the Container registry
        if: ${{ github.event.pull_request.merged || github.actor == 'CamJN' }}
        uses: docker/login-action@v3
        id: login
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag as latest
        if: ${{ success() && steps.login.conclusion != 'skipped' }}
        run: "make tag_latest_${{ matrix.img }}"
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}
      - name: Push to github container registry
        if: ${{ success() && steps.login.conclusion != 'skipped' }}
        run: "make push_${{ matrix.img }}"
        env:
          BUILD_AMD64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'amd64'] }}
          BUILD_ARM64: ${{ fromJSON('[0, 1]')[matrix.arch.name == 'arm64'] }}
